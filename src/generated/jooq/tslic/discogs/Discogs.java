/*
 * This file is generated by jOOQ.
 */
package tslic.discogs;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import tslic.discogs.tables.ArtistAliases;
import tslic.discogs.tables.ArtistGroups;
import tslic.discogs.tables.ArtistMembers;
import tslic.discogs.tables.ArtistNamevariations;
import tslic.discogs.tables.ArtistUrls;
import tslic.discogs.tables.Artists;
import tslic.discogs.tables.LabelSublabels;
import tslic.discogs.tables.LabelUrls;
import tslic.discogs.tables.Labels;
import tslic.discogs.tables.Masters;
import tslic.discogs.tables.ReleaseArtistMaps;
import tslic.discogs.tables.ReleaseCompanies;
import tslic.discogs.tables.ReleaseExtraArtistMaps;
import tslic.discogs.tables.ReleaseFormats;
import tslic.discogs.tables.ReleaseGenres;
import tslic.discogs.tables.ReleaseLabels;
import tslic.discogs.tables.ReleaseStyles;
import tslic.discogs.tables.ReleaseVideos;
import tslic.discogs.tables.Releases;
import tslic.discogs.tables.TrackArtistMaps;
import tslic.discogs.tables.TrackExtraArtistMaps;
import tslic.discogs.tables.Tracks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Discogs extends SchemaImpl {

    private static final long serialVersionUID = -437044105;

    /**
     * The reference instance of <code>discogs</code>
     */
    public static final Discogs DISCOGS = new Discogs();

    /**
     * The table <code>discogs.artist_aliases</code>.
     */
    public final ArtistAliases ARTIST_ALIASES = tslic.discogs.tables.ArtistAliases.ARTIST_ALIASES;

    /**
     * The table <code>discogs.artist_groups</code>.
     */
    public final ArtistGroups ARTIST_GROUPS = tslic.discogs.tables.ArtistGroups.ARTIST_GROUPS;

    /**
     * The table <code>discogs.artist_members</code>.
     */
    public final ArtistMembers ARTIST_MEMBERS = tslic.discogs.tables.ArtistMembers.ARTIST_MEMBERS;

    /**
     * The table <code>discogs.artist_namevariations</code>.
     */
    public final ArtistNamevariations ARTIST_NAMEVARIATIONS = tslic.discogs.tables.ArtistNamevariations.ARTIST_NAMEVARIATIONS;

    /**
     * The table <code>discogs.artists</code>.
     */
    public final Artists ARTISTS = tslic.discogs.tables.Artists.ARTISTS;

    /**
     * The table <code>discogs.artist_urls</code>.
     */
    public final ArtistUrls ARTIST_URLS = tslic.discogs.tables.ArtistUrls.ARTIST_URLS;

    /**
     * The table <code>discogs.labels</code>.
     */
    public final Labels LABELS = tslic.discogs.tables.Labels.LABELS;

    /**
     * The table <code>discogs.label_sublabels</code>.
     */
    public final LabelSublabels LABEL_SUBLABELS = tslic.discogs.tables.LabelSublabels.LABEL_SUBLABELS;

    /**
     * The table <code>discogs.label_urls</code>.
     */
    public final LabelUrls LABEL_URLS = tslic.discogs.tables.LabelUrls.LABEL_URLS;

    /**
     * The table <code>discogs.masters</code>.
     */
    public final Masters MASTERS = tslic.discogs.tables.Masters.MASTERS;

    /**
     * The table <code>discogs.release_artist_maps</code>.
     */
    public final ReleaseArtistMaps RELEASE_ARTIST_MAPS = tslic.discogs.tables.ReleaseArtistMaps.RELEASE_ARTIST_MAPS;

    /**
     * The table <code>discogs.release_companies</code>.
     */
    public final ReleaseCompanies RELEASE_COMPANIES = tslic.discogs.tables.ReleaseCompanies.RELEASE_COMPANIES;

    /**
     * The table <code>discogs.release_extra_artist_maps</code>.
     */
    public final ReleaseExtraArtistMaps RELEASE_EXTRA_ARTIST_MAPS = tslic.discogs.tables.ReleaseExtraArtistMaps.RELEASE_EXTRA_ARTIST_MAPS;

    /**
     * The table <code>discogs.release_formats</code>.
     */
    public final ReleaseFormats RELEASE_FORMATS = tslic.discogs.tables.ReleaseFormats.RELEASE_FORMATS;

    /**
     * The table <code>discogs.release_genres</code>.
     */
    public final ReleaseGenres RELEASE_GENRES = tslic.discogs.tables.ReleaseGenres.RELEASE_GENRES;

    /**
     * The table <code>discogs.release_labels</code>.
     */
    public final ReleaseLabels RELEASE_LABELS = tslic.discogs.tables.ReleaseLabels.RELEASE_LABELS;

    /**
     * The table <code>discogs.releases</code>.
     */
    public final Releases RELEASES = tslic.discogs.tables.Releases.RELEASES;

    /**
     * The table <code>discogs.release_styles</code>.
     */
    public final ReleaseStyles RELEASE_STYLES = tslic.discogs.tables.ReleaseStyles.RELEASE_STYLES;

    /**
     * The table <code>discogs.release_videos</code>.
     */
    public final ReleaseVideos RELEASE_VIDEOS = tslic.discogs.tables.ReleaseVideos.RELEASE_VIDEOS;

    /**
     * The table <code>discogs.track_artist_maps</code>.
     */
    public final TrackArtistMaps TRACK_ARTIST_MAPS = tslic.discogs.tables.TrackArtistMaps.TRACK_ARTIST_MAPS;

    /**
     * The table <code>discogs.track_extra_artist_maps</code>.
     */
    public final TrackExtraArtistMaps TRACK_EXTRA_ARTIST_MAPS = tslic.discogs.tables.TrackExtraArtistMaps.TRACK_EXTRA_ARTIST_MAPS;

    /**
     * The table <code>discogs.tracks</code>.
     */
    public final Tracks TRACKS = tslic.discogs.tables.Tracks.TRACKS;

    /**
     * No further instances allowed
     */
    private Discogs() {
        super("discogs", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            ArtistAliases.ARTIST_ALIASES,
            ArtistGroups.ARTIST_GROUPS,
            ArtistMembers.ARTIST_MEMBERS,
            ArtistNamevariations.ARTIST_NAMEVARIATIONS,
            Artists.ARTISTS,
            ArtistUrls.ARTIST_URLS,
            Labels.LABELS,
            LabelSublabels.LABEL_SUBLABELS,
            LabelUrls.LABEL_URLS,
            Masters.MASTERS,
            ReleaseArtistMaps.RELEASE_ARTIST_MAPS,
            ReleaseCompanies.RELEASE_COMPANIES,
            ReleaseExtraArtistMaps.RELEASE_EXTRA_ARTIST_MAPS,
            ReleaseFormats.RELEASE_FORMATS,
            ReleaseGenres.RELEASE_GENRES,
            ReleaseLabels.RELEASE_LABELS,
            Releases.RELEASES,
            ReleaseStyles.RELEASE_STYLES,
            ReleaseVideos.RELEASE_VIDEOS,
            TrackArtistMaps.TRACK_ARTIST_MAPS,
            TrackExtraArtistMaps.TRACK_EXTRA_ARTIST_MAPS,
            Tracks.TRACKS);
    }
}
