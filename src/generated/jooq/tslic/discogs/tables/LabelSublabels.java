/*
 * This file is generated by jOOQ.
 */
package tslic.discogs.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tslic.discogs.Discogs;
import tslic.discogs.Indexes;
import tslic.discogs.Keys;
import tslic.discogs.tables.records.LabelSublabelsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LabelSublabels extends TableImpl<LabelSublabelsRecord> {

    private static final long serialVersionUID = 553385567;

    /**
     * The reference instance of <code>discogs.label_sublabels</code>
     */
    public static final LabelSublabels LABEL_SUBLABELS = new LabelSublabels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LabelSublabelsRecord> getRecordType() {
        return LabelSublabelsRecord.class;
    }

    /**
     * The column <code>discogs.label_sublabels.label_id</code>.
     */
    public final TableField<LabelSublabelsRecord, Integer> LABEL_ID = createField("label_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>discogs.label_sublabels.ofst</code>.
     */
    public final TableField<LabelSublabelsRecord, Integer> OFST = createField("ofst", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>discogs.label_sublabels.label2_id</code>.
     */
    public final TableField<LabelSublabelsRecord, Integer> LABEL2_ID = createField("label2_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>discogs.label_sublabels.name</code>.
     */
    public final TableField<LabelSublabelsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>discogs.label_sublabels</code> table reference
     */
    public LabelSublabels() {
        this(DSL.name("label_sublabels"), null);
    }

    /**
     * Create an aliased <code>discogs.label_sublabels</code> table reference
     */
    public LabelSublabels(String alias) {
        this(DSL.name(alias), LABEL_SUBLABELS);
    }

    /**
     * Create an aliased <code>discogs.label_sublabels</code> table reference
     */
    public LabelSublabels(Name alias) {
        this(alias, LABEL_SUBLABELS);
    }

    private LabelSublabels(Name alias, Table<LabelSublabelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private LabelSublabels(Name alias, Table<LabelSublabelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LabelSublabels(Table<O> child, ForeignKey<O, LabelSublabelsRecord> key) {
        super(child, key, LABEL_SUBLABELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Discogs.DISCOGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LABEL_SUBLABELS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LabelSublabelsRecord> getPrimaryKey() {
        return Keys.LABEL_SUBLABELS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LabelSublabelsRecord>> getKeys() {
        return Arrays.<UniqueKey<LabelSublabelsRecord>>asList(Keys.LABEL_SUBLABELS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LabelSublabelsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LabelSublabelsRecord, ?>>asList(Keys.LABEL_SUBLABELS__LABEL_ID_FKEY);
    }

    public Labels labels() {
        return new Labels(this, Keys.LABEL_SUBLABELS__LABEL_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LabelSublabels as(String alias) {
        return new LabelSublabels(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LabelSublabels as(Name alias) {
        return new LabelSublabels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LabelSublabels rename(String name) {
        return new LabelSublabels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LabelSublabels rename(Name name) {
        return new LabelSublabels(name, null);
    }
}
