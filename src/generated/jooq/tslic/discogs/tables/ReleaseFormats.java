/*
 * This file is generated by jOOQ.
 */
package tslic.discogs.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tslic.discogs.Discogs;
import tslic.discogs.Indexes;
import tslic.discogs.Keys;
import tslic.discogs.tables.records.ReleaseFormatsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReleaseFormats extends TableImpl<ReleaseFormatsRecord> {

    private static final long serialVersionUID = -1412080112;

    /**
     * The reference instance of <code>discogs.release_formats</code>
     */
    public static final ReleaseFormats RELEASE_FORMATS = new ReleaseFormats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReleaseFormatsRecord> getRecordType() {
        return ReleaseFormatsRecord.class;
    }

    /**
     * The column <code>discogs.release_formats.release_id</code>.
     */
    public final TableField<ReleaseFormatsRecord, Integer> RELEASE_ID = createField("release_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>discogs.release_formats.ofst</code>.
     */
    public final TableField<ReleaseFormatsRecord, Integer> OFST = createField("ofst", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>discogs.release_formats.name</code>.
     */
    public final TableField<ReleaseFormatsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>discogs.release_formats.qty</code>.
     */
    public final TableField<ReleaseFormatsRecord, String> QTY = createField("qty", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>discogs.release_formats.text</code>.
     */
    public final TableField<ReleaseFormatsRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>discogs.release_formats</code> table reference
     */
    public ReleaseFormats() {
        this(DSL.name("release_formats"), null);
    }

    /**
     * Create an aliased <code>discogs.release_formats</code> table reference
     */
    public ReleaseFormats(String alias) {
        this(DSL.name(alias), RELEASE_FORMATS);
    }

    /**
     * Create an aliased <code>discogs.release_formats</code> table reference
     */
    public ReleaseFormats(Name alias) {
        this(alias, RELEASE_FORMATS);
    }

    private ReleaseFormats(Name alias, Table<ReleaseFormatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReleaseFormats(Name alias, Table<ReleaseFormatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReleaseFormats(Table<O> child, ForeignKey<O, ReleaseFormatsRecord> key) {
        super(child, key, RELEASE_FORMATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Discogs.DISCOGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RELEASE_FORMATS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReleaseFormatsRecord> getPrimaryKey() {
        return Keys.RELEASE_FORMATS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReleaseFormatsRecord>> getKeys() {
        return Arrays.<UniqueKey<ReleaseFormatsRecord>>asList(Keys.RELEASE_FORMATS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ReleaseFormatsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReleaseFormatsRecord, ?>>asList(Keys.RELEASE_FORMATS__RELEASES_ID_FKEY);
    }

    public Releases releases() {
        return new Releases(this, Keys.RELEASE_FORMATS__RELEASES_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleaseFormats as(String alias) {
        return new ReleaseFormats(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleaseFormats as(Name alias) {
        return new ReleaseFormats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReleaseFormats rename(String name) {
        return new ReleaseFormats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReleaseFormats rename(Name name) {
        return new ReleaseFormats(name, null);
    }
}
