/*
 * This file is generated by jOOQ.
 */
package tslic.discogs.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import tslic.discogs.tables.ArtistNamevariations;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArtistNamevariationsRecord extends UpdatableRecordImpl<ArtistNamevariationsRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -582766306;

    /**
     * Setter for <code>discogs.artist_namevariations.artist_id</code>.
     */
    public ArtistNamevariationsRecord setArtistId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_namevariations.artist_id</code>.
     */
    public Integer getArtistId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>discogs.artist_namevariations.ofst</code>.
     */
    public ArtistNamevariationsRecord setOfst(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_namevariations.ofst</code>.
     */
    public Integer getOfst() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>discogs.artist_namevariations.namevariation</code>.
     */
    public ArtistNamevariationsRecord setNamevariation(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_namevariations.namevariation</code>.
     */
    public String getNamevariation() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ArtistNamevariations.ARTIST_NAMEVARIATIONS.ARTIST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ArtistNamevariations.ARTIST_NAMEVARIATIONS.OFST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ArtistNamevariations.ARTIST_NAMEVARIATIONS.NAMEVARIATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getArtistId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getOfst();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNamevariation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getArtistId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOfst();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNamevariation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistNamevariationsRecord value1(Integer value) {
        setArtistId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistNamevariationsRecord value2(Integer value) {
        setOfst(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistNamevariationsRecord value3(String value) {
        setNamevariation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistNamevariationsRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtistNamevariationsRecord
     */
    public ArtistNamevariationsRecord() {
        super(ArtistNamevariations.ARTIST_NAMEVARIATIONS);
    }

    /**
     * Create a detached, initialised ArtistNamevariationsRecord
     */
    public ArtistNamevariationsRecord(Integer artistId, Integer ofst, String namevariation) {
        super(ArtistNamevariations.ARTIST_NAMEVARIATIONS);

        set(0, artistId);
        set(1, ofst);
        set(2, namevariation);
    }
}
