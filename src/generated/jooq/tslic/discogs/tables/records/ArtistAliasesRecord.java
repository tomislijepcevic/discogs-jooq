/*
 * This file is generated by jOOQ.
 */
package tslic.discogs.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import tslic.discogs.tables.ArtistAliases;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArtistAliasesRecord extends UpdatableRecordImpl<ArtistAliasesRecord> implements Record4<Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 435317497;

    /**
     * Setter for <code>discogs.artist_aliases.artist_id</code>.
     */
    public ArtistAliasesRecord setArtistId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_aliases.artist_id</code>.
     */
    public Integer getArtistId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>discogs.artist_aliases.ofst</code>.
     */
    public ArtistAliasesRecord setOfst(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_aliases.ofst</code>.
     */
    public Integer getOfst() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>discogs.artist_aliases.artist2_id</code>.
     */
    public ArtistAliasesRecord setArtist2Id(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_aliases.artist2_id</code>.
     */
    public Integer getArtist2Id() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>discogs.artist_aliases.name</code>.
     */
    public ArtistAliasesRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>discogs.artist_aliases.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ArtistAliases.ARTIST_ALIASES.ARTIST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ArtistAliases.ARTIST_ALIASES.OFST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ArtistAliases.ARTIST_ALIASES.ARTIST2_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ArtistAliases.ARTIST_ALIASES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getArtistId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getOfst();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getArtist2Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getArtistId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOfst();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getArtist2Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistAliasesRecord value1(Integer value) {
        setArtistId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistAliasesRecord value2(Integer value) {
        setOfst(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistAliasesRecord value3(Integer value) {
        setArtist2Id(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistAliasesRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArtistAliasesRecord values(Integer value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtistAliasesRecord
     */
    public ArtistAliasesRecord() {
        super(ArtistAliases.ARTIST_ALIASES);
    }

    /**
     * Create a detached, initialised ArtistAliasesRecord
     */
    public ArtistAliasesRecord(Integer artistId, Integer ofst, Integer artist2Id, String name) {
        super(ArtistAliases.ARTIST_ALIASES);

        set(0, artistId);
        set(1, ofst);
        set(2, artist2Id);
        set(3, name);
    }
}
