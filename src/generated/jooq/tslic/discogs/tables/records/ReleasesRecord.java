/*
 * This file is generated by jOOQ.
 */
package tslic.discogs.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import tslic.discogs.tables.Releases;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReleasesRecord extends UpdatableRecordImpl<ReleasesRecord> implements Record8<Integer, String, String, Integer, String, String, String, String> {

    private static final long serialVersionUID = -1340053684;

    /**
     * Setter for <code>discogs.releases.id</code>.
     */
    public ReleasesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>discogs.releases.country</code>.
     */
    public ReleasesRecord setCountry(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.country</code>.
     */
    public String getCountry() {
        return (String) get(1);
    }

    /**
     * Setter for <code>discogs.releases.data_quality</code>.
     */
    public ReleasesRecord setDataQuality(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.data_quality</code>.
     */
    public String getDataQuality() {
        return (String) get(2);
    }

    /**
     * Setter for <code>discogs.releases.master_id</code>.
     */
    public ReleasesRecord setMasterId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.master_id</code>.
     */
    public Integer getMasterId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>discogs.releases.notes</code>.
     */
    public ReleasesRecord setNotes(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.notes</code>.
     */
    public String getNotes() {
        return (String) get(4);
    }

    /**
     * Setter for <code>discogs.releases.released</code>.
     */
    public ReleasesRecord setReleased(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.released</code>.
     */
    public String getReleased() {
        return (String) get(5);
    }

    /**
     * Setter for <code>discogs.releases.status</code>.
     */
    public ReleasesRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>discogs.releases.title</code>.
     */
    public ReleasesRecord setTitle(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>discogs.releases.title</code>.
     */
    public String getTitle() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Releases.RELEASES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Releases.RELEASES.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Releases.RELEASES.DATA_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Releases.RELEASES.MASTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Releases.RELEASES.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Releases.RELEASES.RELEASED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Releases.RELEASES.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Releases.RELEASES.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDataQuality();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getMasterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getReleased();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDataQuality();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getMasterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getReleased();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value2(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value3(String value) {
        setDataQuality(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value4(Integer value) {
        setMasterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value5(String value) {
        setNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value6(String value) {
        setReleased(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value7(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord value8(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReleasesRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReleasesRecord
     */
    public ReleasesRecord() {
        super(Releases.RELEASES);
    }

    /**
     * Create a detached, initialised ReleasesRecord
     */
    public ReleasesRecord(Integer id, String country, String dataQuality, Integer masterId, String notes, String released, String status, String title) {
        super(Releases.RELEASES);

        set(0, id);
        set(1, country);
        set(2, dataQuality);
        set(3, masterId);
        set(4, notes);
        set(5, released);
        set(6, status);
        set(7, title);
    }
}
